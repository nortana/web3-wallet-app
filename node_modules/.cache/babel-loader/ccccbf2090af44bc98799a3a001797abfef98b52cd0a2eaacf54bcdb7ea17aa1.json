{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function () {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.fromQuorumWallet = exports.fromKryptoKit = exports.fromEtherCamp = exports.fromEtherWallet = void 0;\nconst crypto = __importStar(require(\"crypto\"));\nconst ethereumjs_util_1 = require(\"ethereumjs-util\");\nconst scrypt_js_1 = require(\"scrypt-js\");\nconst index_1 = __importDefault(require(\"./index\"));\nconst utf8 = require('utf8');\nconst aesjs = require('aes-js');\nfunction runCipherBuffer(cipher, data) {\n  return Buffer.concat([cipher.update(data), cipher.final()]);\n}\nconst evpKdfDefaults = {\n  count: 1,\n  keysize: 16,\n  ivsize: 16,\n  digest: 'md5'\n};\nfunction mergeEvpKdfOptsWithDefaults(opts) {\n  if (!opts) {\n    return evpKdfDefaults;\n  }\n  return {\n    count: opts.count || evpKdfDefaults.count,\n    keysize: opts.keysize || evpKdfDefaults.keysize,\n    ivsize: opts.ivsize || evpKdfDefaults.ivsize,\n    digest: opts.digest || evpKdfDefaults.digest\n  };\n}\n/*\n * opts:\n * - digest - digest algorithm, defaults to md5\n * - count - hash iterations\n * - keysize - desired key size\n * - ivsize - desired IV size\n *\n * Algorithm form https://www.openssl.org/docs/manmaster/crypto/EVP_BytesToKey.html\n *\n * FIXME: not optimised at all\n */\nfunction evp_kdf(data, salt, opts) {\n  const params = mergeEvpKdfOptsWithDefaults(opts);\n  // A single EVP iteration, returns `D_i`, where block equlas to `D_(i-1)`\n  function iter(block) {\n    let hash = crypto.createHash(params.digest);\n    hash.update(block);\n    hash.update(data);\n    hash.update(salt);\n    block = hash.digest();\n    for (let i = 1, len = params.count; i < len; i++) {\n      hash = crypto.createHash(params.digest);\n      hash.update(block);\n      block = hash.digest();\n    }\n    return block;\n  }\n  const ret = [];\n  let i = 0;\n  while (Buffer.concat(ret).length < params.keysize + params.ivsize) {\n    ret[i] = iter(i === 0 ? Buffer.alloc(0) : ret[i - 1]);\n    i++;\n  }\n  const tmp = Buffer.concat(ret);\n  return {\n    key: tmp.slice(0, params.keysize),\n    iv: tmp.slice(params.keysize, params.keysize + params.ivsize)\n  };\n}\n// http://stackoverflow.com/questions/25288311/cryptojs-aes-pattern-always-ends-with\nfunction decodeCryptojsSalt(input) {\n  const ciphertext = Buffer.from(input, 'base64');\n  if (ciphertext.slice(0, 8).toString() === 'Salted__') {\n    return {\n      salt: ciphertext.slice(8, 16),\n      ciphertext: ciphertext.slice(16)\n    };\n  }\n  return {\n    ciphertext\n  };\n}\n/*\n * Third Party API: Import a wallet generated by EtherWallet\n * This wallet format is created by https://github.com/SilentCicero/ethereumjs-accounts\n * and used on https://www.myetherwallet.com/\n */\nfunction fromEtherWallet(input, password) {\n  const json = typeof input === 'object' ? input : JSON.parse(input);\n  let privateKey;\n  if (!json.locked) {\n    if (json.private.length !== 64) {\n      throw new Error('Invalid private key length');\n    }\n    privateKey = Buffer.from(json.private, 'hex');\n  } else {\n    if (typeof password !== 'string') {\n      throw new Error('Password required');\n    }\n    if (password.length < 7) {\n      throw new Error('Password must be at least 7 characters');\n    }\n    // the \"encrypted\" version has the low 4 bytes\n    // of the hash of the address appended\n    const hash = json.encrypted ? json.private.slice(0, 128) : json.private;\n    // decode openssl ciphertext + salt encoding\n    const cipher = decodeCryptojsSalt(hash);\n    if (!cipher.salt) {\n      throw new Error('Unsupported EtherWallet key format');\n    }\n    // derive key/iv using OpenSSL EVP as implemented in CryptoJS\n    const evp = evp_kdf(Buffer.from(password), cipher.salt, {\n      keysize: 32,\n      ivsize: 16\n    });\n    const decipher = crypto.createDecipheriv('aes-256-cbc', evp.key, evp.iv);\n    privateKey = runCipherBuffer(decipher, Buffer.from(cipher.ciphertext));\n    // NOTE: yes, they've run it through UTF8\n    privateKey = Buffer.from(utf8.decode(privateKey.toString()), 'hex');\n  }\n  const wallet = new index_1.default(privateKey);\n  if (wallet.getAddressString() !== json.address) {\n    throw new Error('Invalid private key or address');\n  }\n  return wallet;\n}\nexports.fromEtherWallet = fromEtherWallet;\n/**\n * Third Party API: Import a brain wallet used by Ether.Camp\n */\nfunction fromEtherCamp(passphrase) {\n  return new index_1.default((0, ethereumjs_util_1.keccak256)(Buffer.from(passphrase)));\n}\nexports.fromEtherCamp = fromEtherCamp;\n/**\n * Third Party API: Import a wallet from a KryptoKit seed\n */\nasync function fromKryptoKit(entropy, password) {\n  function kryptoKitBrokenScryptSeed(buf) {\n    // js-scrypt calls `Buffer.from(String(salt), 'utf8')` on the seed even though it is a buffer\n    //\n    // The `buffer`` implementation used does the below transformation (doesn't matches the current version):\n    // https://github.com/feross/buffer/blob/67c61181b938b17d10dbfc0a545f713b8bd59de8/index.js\n    function decodeUtf8Char(str) {\n      try {\n        return decodeURIComponent(str);\n      } catch (err) {\n        return String.fromCharCode(0xfffd); // UTF 8 invalid char\n      }\n    }\n    let res = '',\n      tmp = '';\n    for (let i = 0; i < buf.length; i++) {\n      if (buf[i] <= 0x7f) {\n        res += decodeUtf8Char(tmp) + String.fromCharCode(buf[i]);\n        tmp = '';\n      } else {\n        tmp += '%' + buf[i].toString(16);\n      }\n    }\n    return Buffer.from(res + decodeUtf8Char(tmp));\n  }\n  if (entropy[0] === '#') {\n    entropy = entropy.slice(1);\n  }\n  const type = entropy[0];\n  entropy = entropy.slice(1);\n  let privateKey;\n  if (type === 'd') {\n    privateKey = (0, ethereumjs_util_1.sha256)((0, ethereumjs_util_1.toBuffer)(entropy));\n  } else if (type === 'q') {\n    if (typeof password !== 'string') {\n      throw new Error('Password required');\n    }\n    const encryptedSeed = (0, ethereumjs_util_1.sha256)(Buffer.from(entropy.slice(0, 30)));\n    const checksum = entropy.slice(30, 46);\n    const salt = kryptoKitBrokenScryptSeed(encryptedSeed);\n    const aesKey = await (0, scrypt_js_1.scrypt)(Buffer.from(password, 'utf8'), salt, 16384, 8, 1, 32);\n    /* FIXME: try to use `crypto` instead of `aesjs`\n         // NOTE: ECB doesn't use the IV, so it can be anything\n    var decipher = crypto.createDecipheriv(\"aes-256-ecb\", aesKey, Buffer.from(0))\n         // FIXME: this is a clear abuse, but seems to match how ECB in aesjs works\n    privKey = Buffer.concat([\n      decipher.update(encryptedSeed).slice(0, 16),\n      decipher.update(encryptedSeed).slice(0, 16),\n    ])\n    */\n    const decipher = new aesjs.ModeOfOperation.ecb(aesKey);\n    /* decrypt returns an Uint8Array, perhaps there is a better way to concatenate */\n    privateKey = Buffer.concat([Buffer.from(decipher.decrypt(encryptedSeed.slice(0, 16))), Buffer.from(decipher.decrypt(encryptedSeed.slice(16, 32)))]);\n    if (checksum.length > 0) {\n      if (checksum !== (0, ethereumjs_util_1.sha256)((0, ethereumjs_util_1.sha256)(privateKey)).slice(0, 8).toString('hex')) {\n        throw new Error('Failed to decrypt input - possibly invalid passphrase');\n      }\n    }\n  } else {\n    throw new Error('Unsupported or invalid entropy type');\n  }\n  return new index_1.default(privateKey);\n}\nexports.fromKryptoKit = fromKryptoKit;\n/**\n * Third Party API: Import a brain wallet used by Quorum Wallet\n */\nfunction fromQuorumWallet(passphrase, userid) {\n  if (passphrase.length < 10) {\n    throw new Error('Passphrase must be at least 10 characters');\n  }\n  if (userid.length < 10) {\n    throw new Error('User id must be at least 10 characters');\n  }\n  const merged = passphrase + userid;\n  const seed = crypto.pbkdf2Sync(merged, merged, 2000, 32, 'sha256');\n  return new index_1.default(seed);\n}\nexports.fromQuorumWallet = fromQuorumWallet;\nconst Thirdparty = {\n  fromEtherWallet,\n  fromEtherCamp,\n  fromKryptoKit,\n  fromQuorumWallet\n};\nexports.default = Thirdparty;","map":{"version":3,"names":["crypto","__importStar","require","ethereumjs_util_1","scrypt_js_1","index_1","__importDefault","utf8","aesjs","runCipherBuffer","cipher","data","Buffer","concat","update","final","evpKdfDefaults","count","keysize","ivsize","digest","mergeEvpKdfOptsWithDefaults","opts","evp_kdf","salt","params","iter","block","hash","createHash","i","len","ret","length","alloc","tmp","key","slice","iv","decodeCryptojsSalt","input","ciphertext","from","toString","fromEtherWallet","password","json","JSON","parse","privateKey","locked","private","Error","encrypted","evp","decipher","createDecipheriv","decode","wallet","default","getAddressString","address","exports","fromEtherCamp","passphrase","keccak256","fromKryptoKit","entropy","kryptoKitBrokenScryptSeed","buf","decodeUtf8Char","str","decodeURIComponent","err","String","fromCharCode","res","type","sha256","toBuffer","encryptedSeed","checksum","aesKey","scrypt","ModeOfOperation","ecb","decrypt","fromQuorumWallet","userid","merged","seed","pbkdf2Sync","Thirdparty"],"sources":["../src/thirdparty.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}