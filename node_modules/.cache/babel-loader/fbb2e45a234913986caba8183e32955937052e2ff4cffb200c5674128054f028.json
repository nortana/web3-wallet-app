{"ast":null,"code":"/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nimport { ETH_DATA_FORMAT } from 'web3-types';\nimport { toNumber } from 'web3-utils';\nimport { TransactionFactory, Common } from 'web3-eth-accounts';\nimport { isNullish } from 'web3-validator';\nimport { validateTransactionForSigning } from '../validation.js';\nimport { formatTransaction } from './format_transaction.js';\nimport { transactionBuilder } from './transaction_builder.js';\nconst getEthereumjsTxDataFromTransaction = transaction => {\n  var _a, _b;\n  return {\n    nonce: transaction.nonce,\n    gasPrice: transaction.gasPrice,\n    gasLimit: (_a = transaction.gasLimit) !== null && _a !== void 0 ? _a : transaction.gas,\n    to: transaction.to,\n    value: transaction.value,\n    data: (_b = transaction.data) !== null && _b !== void 0 ? _b : transaction.input,\n    type: transaction.type,\n    chainId: transaction.chainId,\n    accessList: transaction.accessList,\n    maxPriorityFeePerGas: transaction.maxPriorityFeePerGas,\n    maxFeePerGas: transaction.maxFeePerGas\n  };\n};\nconst getEthereumjsTransactionOptions = (transaction, web3Context) => {\n  var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s, _t;\n  const hasTransactionSigningOptions = !isNullish(transaction.chain) && !isNullish(transaction.hardfork) || !isNullish(transaction.common);\n  let common;\n  if (!hasTransactionSigningOptions) {\n    // if defaultcommon is specified, use that.\n    if (web3Context.defaultCommon) {\n      common = web3Context.defaultCommon;\n      if (isNullish(common.hardfork)) common.hardfork = (_a = transaction.hardfork) !== null && _a !== void 0 ? _a : web3Context.defaultHardfork;\n      if (isNullish(common.baseChain)) common.baseChain = web3Context.defaultChain;\n    } else {\n      common = Common.custom({\n        name: 'custom-network',\n        chainId: toNumber(transaction.chainId),\n        networkId: !isNullish(transaction.networkId) ? toNumber(transaction.networkId) : undefined,\n        defaultHardfork: (_b = transaction.hardfork) !== null && _b !== void 0 ? _b : web3Context.defaultHardfork\n      }, {\n        baseChain: web3Context.defaultChain\n      });\n    }\n  } else {\n    const name = (_f = (_e = (_d = (_c = transaction === null || transaction === void 0 ? void 0 : transaction.common) === null || _c === void 0 ? void 0 : _c.customChain) === null || _d === void 0 ? void 0 : _d.name) !== null && _e !== void 0 ? _e : transaction.chain) !== null && _f !== void 0 ? _f : 'custom-network';\n    const chainId = toNumber((_j = (_h = (_g = transaction === null || transaction === void 0 ? void 0 : transaction.common) === null || _g === void 0 ? void 0 : _g.customChain) === null || _h === void 0 ? void 0 : _h.chainId) !== null && _j !== void 0 ? _j : transaction === null || transaction === void 0 ? void 0 : transaction.chainId);\n    const networkId = toNumber((_m = (_l = (_k = transaction === null || transaction === void 0 ? void 0 : transaction.common) === null || _k === void 0 ? void 0 : _k.customChain) === null || _l === void 0 ? void 0 : _l.networkId) !== null && _m !== void 0 ? _m : transaction === null || transaction === void 0 ? void 0 : transaction.networkId);\n    const defaultHardfork = (_q = (_p = (_o = transaction === null || transaction === void 0 ? void 0 : transaction.common) === null || _o === void 0 ? void 0 : _o.hardfork) !== null && _p !== void 0 ? _p : transaction === null || transaction === void 0 ? void 0 : transaction.hardfork) !== null && _q !== void 0 ? _q : web3Context.defaultHardfork;\n    const baseChain = (_t = (_s = (_r = transaction.common) === null || _r === void 0 ? void 0 : _r.baseChain) !== null && _s !== void 0 ? _s : transaction.chain) !== null && _t !== void 0 ? _t : web3Context.defaultChain;\n    if (chainId && networkId && name) {\n      common = Common.custom({\n        name,\n        chainId,\n        networkId,\n        defaultHardfork\n      }, {\n        baseChain\n      });\n    }\n  }\n  return {\n    common\n  };\n};\nexport const prepareTransactionForSigning = (transaction, web3Context, privateKey, fillGasPrice = false, fillGasLimit = true) => __awaiter(void 0, void 0, void 0, function* () {\n  const populatedTransaction = yield transactionBuilder({\n    transaction,\n    web3Context,\n    privateKey,\n    fillGasPrice,\n    fillGasLimit\n  });\n  const formattedTransaction = formatTransaction(populatedTransaction, ETH_DATA_FORMAT);\n  validateTransactionForSigning(formattedTransaction);\n  return TransactionFactory.fromTxData(getEthereumjsTxDataFromTransaction(formattedTransaction), getEthereumjsTransactionOptions(formattedTransaction, web3Context));\n});","map":{"version":3,"names":["ETH_DATA_FORMAT","toNumber","TransactionFactory","Common","isNullish","validateTransactionForSigning","formatTransaction","transactionBuilder","getEthereumjsTxDataFromTransaction","transaction","nonce","gasPrice","gasLimit","_a","gas","to","value","data","_b","input","type","chainId","accessList","maxPriorityFeePerGas","maxFeePerGas","getEthereumjsTransactionOptions","web3Context","hasTransactionSigningOptions","chain","hardfork","common","defaultCommon","defaultHardfork","baseChain","defaultChain","custom","name","networkId","undefined","_f","_e","_d","_c","customChain","_j","_h","_g","_m","_l","_k","_q","_p","_o","_t","_s","_r","prepareTransactionForSigning","privateKey","fillGasPrice","fillGasLimit","__awaiter","populatedTransaction","formattedTransaction","fromTxData"],"sources":["../../../src/utils/prepare_transaction_for_signing.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}