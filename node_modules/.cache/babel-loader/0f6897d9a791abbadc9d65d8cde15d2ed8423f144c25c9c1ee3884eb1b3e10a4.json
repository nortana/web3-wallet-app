{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function () {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.thirdparty = exports.hdkey = void 0;\nconst crypto = __importStar(require(\"crypto\"));\nconst ethereumjs_util_1 = require(\"ethereumjs-util\");\nconst scrypt_js_1 = require(\"scrypt-js\");\nvar hdkey_1 = require(\"./hdkey\");\nObject.defineProperty(exports, \"hdkey\", {\n  enumerable: true,\n  get: function () {\n    return __importDefault(hdkey_1).default;\n  }\n});\nvar thirdparty_1 = require(\"./thirdparty\");\nObject.defineProperty(exports, \"thirdparty\", {\n  enumerable: true,\n  get: function () {\n    return __importDefault(thirdparty_1).default;\n  }\n});\nconst bs58check = require('bs58check');\nconst randomBytes = require('randombytes');\nconst uuidv4 = require('uuid').v4;\nfunction validateHexString(paramName, str, length) {\n  if (str.toLowerCase().startsWith('0x')) {\n    str = str.slice(2);\n  }\n  if (!str && !length) {\n    return str;\n  }\n  if (length % 2) {\n    throw new Error(`Invalid length argument, must be an even number`);\n  }\n  if (typeof length === 'number' && str.length !== length) {\n    throw new Error(`Invalid ${paramName}, string must be ${length} hex characters`);\n  }\n  if (!/^([0-9a-f]{2})+$/i.test(str)) {\n    const howMany = typeof length === 'number' ? length : 'empty or a non-zero even number of';\n    throw new Error(`Invalid ${paramName}, string must be ${howMany} hex characters`);\n  }\n  return str;\n}\nfunction validateBuffer(paramName, buff, length) {\n  if (!Buffer.isBuffer(buff)) {\n    const howManyHex = typeof length === 'number' ? `${length * 2}` : 'empty or a non-zero even number of';\n    const howManyBytes = typeof length === 'number' ? ` (${length} bytes)` : '';\n    throw new Error(`Invalid ${paramName}, must be a string (${howManyHex} hex characters) or buffer${howManyBytes}`);\n  }\n  if (typeof length === 'number' && buff.length !== length) {\n    throw new Error(`Invalid ${paramName}, buffer must be ${length} bytes`);\n  }\n  return buff;\n}\nfunction mergeToV3ParamsWithDefaults(params) {\n  const v3Defaults = {\n    cipher: 'aes-128-ctr',\n    kdf: 'scrypt',\n    salt: randomBytes(32),\n    iv: randomBytes(16),\n    uuid: randomBytes(16),\n    dklen: 32,\n    c: 262144,\n    n: 262144,\n    r: 8,\n    p: 1\n  };\n  if (!params) {\n    return v3Defaults;\n  }\n  if (typeof params.salt === 'string') {\n    params.salt = Buffer.from(validateHexString('salt', params.salt), 'hex');\n  }\n  if (typeof params.iv === 'string') {\n    params.iv = Buffer.from(validateHexString('iv', params.iv, 32), 'hex');\n  }\n  if (typeof params.uuid === 'string') {\n    params.uuid = Buffer.from(validateHexString('uuid', params.uuid, 32), 'hex');\n  }\n  if (params.salt) {\n    validateBuffer('salt', params.salt);\n  }\n  if (params.iv) {\n    validateBuffer('iv', params.iv, 16);\n  }\n  if (params.uuid) {\n    validateBuffer('uuid', params.uuid, 16);\n  }\n  return Object.assign(Object.assign({}, v3Defaults), params);\n}\nfunction kdfParamsForPBKDF(opts) {\n  return {\n    dklen: opts.dklen,\n    salt: opts.salt,\n    c: opts.c,\n    prf: 'hmac-sha256'\n  };\n}\nfunction kdfParamsForScrypt(opts) {\n  return {\n    dklen: opts.dklen,\n    salt: opts.salt,\n    n: opts.n,\n    r: opts.r,\n    p: opts.p\n  };\n}\n// wallet implementation\nclass Wallet {\n  constructor(privateKey, publicKey = undefined) {\n    this.privateKey = privateKey;\n    this.publicKey = publicKey;\n    if (privateKey && publicKey) {\n      throw new Error('Cannot supply both a private and a public key to the constructor');\n    }\n    if (privateKey && !(0, ethereumjs_util_1.isValidPrivate)(privateKey)) {\n      throw new Error('Private key does not satisfy the curve requirements (ie. it is invalid)');\n    }\n    if (publicKey && !(0, ethereumjs_util_1.isValidPublic)(publicKey)) {\n      throw new Error('Invalid public key');\n    }\n  }\n  // static methods\n  /**\n   * Create an instance based on a new random key.\n   *\n   * @param icapDirect setting this to `true` will generate an address suitable for the `ICAP Direct mode`\n   */\n  static generate(icapDirect = false) {\n    if (icapDirect) {\n      const max = new ethereumjs_util_1.BN('088f924eeceeda7fe92e1f5b0fffffffffffffff', 16);\n      while (true) {\n        const privateKey = randomBytes(32);\n        if (new ethereumjs_util_1.BN((0, ethereumjs_util_1.privateToAddress)(privateKey)).lte(max)) {\n          return new Wallet(privateKey);\n        }\n      }\n    } else {\n      return new Wallet(randomBytes(32));\n    }\n  }\n  /**\n   * Create an instance where the address is valid against the supplied pattern (**this will be very slow**)\n   */\n  static generateVanityAddress(pattern) {\n    if (!(pattern instanceof RegExp)) {\n      pattern = new RegExp(pattern);\n    }\n    while (true) {\n      const privateKey = randomBytes(32);\n      const address = (0, ethereumjs_util_1.privateToAddress)(privateKey);\n      if (pattern.test(address.toString('hex'))) {\n        return new Wallet(privateKey);\n      }\n    }\n  }\n  /**\n   * Create an instance based on a public key (certain methods will not be available)\n   *\n   * This method only accepts uncompressed Ethereum-style public keys, unless\n   * the `nonStrict` flag is set to true.\n   */\n  static fromPublicKey(publicKey, nonStrict = false) {\n    if (nonStrict) {\n      publicKey = (0, ethereumjs_util_1.importPublic)(publicKey);\n    }\n    return new Wallet(undefined, publicKey);\n  }\n  /**\n   * Create an instance based on a BIP32 extended public key (xpub)\n   */\n  static fromExtendedPublicKey(extendedPublicKey) {\n    if (extendedPublicKey.slice(0, 4) !== 'xpub') {\n      throw new Error('Not an extended public key');\n    }\n    const publicKey = bs58check.decode(extendedPublicKey).slice(45);\n    // Convert to an Ethereum public key\n    return Wallet.fromPublicKey(publicKey, true);\n  }\n  /**\n   * Create an instance based on a raw private key\n   */\n  static fromPrivateKey(privateKey) {\n    return new Wallet(privateKey);\n  }\n  /**\n   * Create an instance based on a BIP32 extended private key (xprv)\n   */\n  static fromExtendedPrivateKey(extendedPrivateKey) {\n    if (extendedPrivateKey.slice(0, 4) !== 'xprv') {\n      throw new Error('Not an extended private key');\n    }\n    const tmp = bs58check.decode(extendedPrivateKey);\n    if (tmp[45] !== 0) {\n      throw new Error('Invalid extended private key');\n    }\n    return Wallet.fromPrivateKey(tmp.slice(46));\n  }\n  /**\n   * Import a wallet (Version 1 of the Ethereum wallet format).\n   *\n   * @param input A JSON serialized string, or an object representing V1 Keystore.\n   * @param password The keystore password.\n   */\n  static async fromV1(input, password) {\n    const json = typeof input === 'object' ? input : JSON.parse(input);\n    if (json.Version !== '1') {\n      throw new Error('Not a V1 Wallet');\n    }\n    if (json.Crypto.KeyHeader.Kdf !== 'scrypt') {\n      throw new Error('Unsupported key derivation scheme');\n    }\n    const kdfparams = json.Crypto.KeyHeader.KdfParams;\n    const derivedKey = await (0, scrypt_js_1.scrypt)(Buffer.from(password), Buffer.from(json.Crypto.Salt, 'hex'), kdfparams.N, kdfparams.R, kdfparams.P, kdfparams.DkLen);\n    const ciphertext = Buffer.from(json.Crypto.CipherText, 'hex');\n    const mac = (0, ethereumjs_util_1.keccak256)(Buffer.concat([derivedKey.slice(16, 32), ciphertext]));\n    if (mac.toString('hex') !== json.Crypto.MAC) {\n      throw new Error('Key derivation failed - possibly wrong passphrase');\n    }\n    const decipher = crypto.createDecipheriv('aes-128-cbc', (0, ethereumjs_util_1.keccak256)(derivedKey.slice(0, 16)).slice(0, 16), Buffer.from(json.Crypto.IV, 'hex'));\n    const seed = runCipherBuffer(decipher, ciphertext);\n    return new Wallet(seed);\n  }\n  /**\n   * Import a wallet (Version 3 of the Ethereum wallet format). Set `nonStrict` true to accept files with mixed-caps.\n   *\n   * @param input A JSON serialized string, or an object representing V3 Keystore.\n   * @param password The keystore password.\n   */\n  static async fromV3(input, password, nonStrict = false) {\n    const json = typeof input === 'object' ? input : JSON.parse(nonStrict ? input.toLowerCase() : input);\n    if (json.version !== 3) {\n      throw new Error('Not a V3 wallet');\n    }\n    let derivedKey, kdfparams;\n    if (json.crypto.kdf === 'scrypt') {\n      kdfparams = json.crypto.kdfparams;\n      // FIXME: support progress reporting callback\n      derivedKey = await (0, scrypt_js_1.scrypt)(Buffer.from(password), Buffer.from(kdfparams.salt, 'hex'), kdfparams.n, kdfparams.r, kdfparams.p, kdfparams.dklen);\n    } else if (json.crypto.kdf === 'pbkdf2') {\n      kdfparams = json.crypto.kdfparams;\n      if (kdfparams.prf !== 'hmac-sha256') {\n        throw new Error('Unsupported parameters to PBKDF2');\n      }\n      derivedKey = crypto.pbkdf2Sync(Buffer.from(password), Buffer.from(kdfparams.salt, 'hex'), kdfparams.c, kdfparams.dklen, 'sha256');\n    } else {\n      throw new Error('Unsupported key derivation scheme');\n    }\n    const ciphertext = Buffer.from(json.crypto.ciphertext, 'hex');\n    const mac = (0, ethereumjs_util_1.keccak256)(Buffer.concat([Buffer.from(derivedKey.slice(16, 32)), ciphertext]));\n    if (mac.toString('hex') !== json.crypto.mac) {\n      throw new Error('Key derivation failed - possibly wrong passphrase');\n    }\n    const decipher = crypto.createDecipheriv(json.crypto.cipher, derivedKey.slice(0, 16), Buffer.from(json.crypto.cipherparams.iv, 'hex'));\n    const seed = runCipherBuffer(decipher, ciphertext);\n    return new Wallet(seed);\n  }\n  /*\n   * Import an Ethereum Pre Sale wallet.\n   * Based on https://github.com/ethereum/pyethsaletool/blob/master/pyethsaletool.py\n   * JSON fields: encseed, ethaddr, btcaddr, email\n   *\n   * @param input A JSON serialized string, or an object representing EthSale Keystore.\n   * @param password The keystore password.\n   */\n  static fromEthSale(input, password) {\n    const json = typeof input === 'object' ? input : JSON.parse(input);\n    const encseed = Buffer.from(json.encseed, 'hex');\n    // key derivation\n    const derivedKey = crypto.pbkdf2Sync(password, password, 2000, 32, 'sha256').slice(0, 16);\n    // seed decoding (IV is first 16 bytes)\n    // NOTE: crypto (derived from openssl) when used with aes-*-cbc will handle PKCS#7 padding internally\n    //       see also http://stackoverflow.com/a/31614770/4964819\n    const decipher = crypto.createDecipheriv('aes-128-cbc', derivedKey, encseed.slice(0, 16));\n    const seed = runCipherBuffer(decipher, encseed.slice(16));\n    const wallet = new Wallet((0, ethereumjs_util_1.keccak256)(seed));\n    if (wallet.getAddress().toString('hex') !== json.ethaddr) {\n      throw new Error('Decoded key mismatch - possibly wrong passphrase');\n    }\n    return wallet;\n  }\n  // private getters\n  /**\n   * Returns the wallet's public key.\n   */\n  get pubKey() {\n    if (!keyExists(this.publicKey)) {\n      this.publicKey = (0, ethereumjs_util_1.privateToPublic)(this.privateKey);\n    }\n    return this.publicKey;\n  }\n  /**\n   * Returns the wallet's private key.\n   */\n  get privKey() {\n    if (!keyExists(this.privateKey)) {\n      throw new Error('This is a public key only wallet');\n    }\n    return this.privateKey;\n  }\n  // public instance methods\n  /**\n   * Returns the wallet's private key.\n   *\n   */\n  // tslint:disable-next-line\n  getPrivateKey() {\n    return this.privKey;\n  }\n  getPrivateKeyString() {\n    return (0, ethereumjs_util_1.bufferToHex)(this.privKey);\n  }\n  /**\n   * Returns the wallet's public key.\n   */\n  // tslint:disable-next-line\n  getPublicKey() {\n    return this.pubKey;\n  }\n  /**\n   * Returns the wallet's public key as a \"0x\" prefixed hex string\n   */\n  getPublicKeyString() {\n    return (0, ethereumjs_util_1.bufferToHex)(this.getPublicKey());\n  }\n  /**\n   * Returns the wallet's address.\n   */\n  getAddress() {\n    return (0, ethereumjs_util_1.publicToAddress)(this.pubKey);\n  }\n  /**\n   * Returns the wallet's address as a \"0x\" prefixed hex string\n   */\n  getAddressString() {\n    return (0, ethereumjs_util_1.bufferToHex)(this.getAddress());\n  }\n  /**\n   * Returns the wallet's private key as a \"0x\" prefixed hex string checksummed\n   * according to [EIP 55](https://github.com/ethereum/EIPs/issues/55).\n   */\n  getChecksumAddressString() {\n    return (0, ethereumjs_util_1.toChecksumAddress)(this.getAddressString());\n  }\n  /**\n   * Returns an Etherem Version 3 Keystore Format object representing the wallet\n   *\n   * @param password The password used to encrypt the Keystore.\n   * @param opts The options for the keystore. See [its spec](https://github.com/ethereum/wiki/wiki/Web3-Secret-Storage-Definition) for more info.\n   */\n  async toV3(password, opts) {\n    if (!keyExists(this.privateKey)) {\n      throw new Error('This is a public key only wallet');\n    }\n    const v3Params = mergeToV3ParamsWithDefaults(opts);\n    let kdfParams;\n    let derivedKey;\n    switch (v3Params.kdf) {\n      case \"pbkdf2\" /* PBKDF */:\n        kdfParams = kdfParamsForPBKDF(v3Params);\n        derivedKey = crypto.pbkdf2Sync(Buffer.from(password), kdfParams.salt, kdfParams.c, kdfParams.dklen, 'sha256');\n        break;\n      case \"scrypt\" /* Scrypt */:\n        kdfParams = kdfParamsForScrypt(v3Params);\n        // FIXME: support progress reporting callback\n        derivedKey = await (0, scrypt_js_1.scrypt)(Buffer.from(password), kdfParams.salt, kdfParams.n, kdfParams.r, kdfParams.p, kdfParams.dklen);\n        break;\n      default:\n        throw new Error('Unsupported kdf');\n    }\n    const cipher = crypto.createCipheriv(v3Params.cipher, derivedKey.slice(0, 16), v3Params.iv);\n    if (!cipher) {\n      throw new Error('Unsupported cipher');\n    }\n    const ciphertext = runCipherBuffer(cipher, this.privKey);\n    const mac = (0, ethereumjs_util_1.keccak256)(Buffer.concat([Buffer.from(derivedKey.slice(16, 32)), Buffer.from(ciphertext)]));\n    return {\n      version: 3,\n      id: uuidv4({\n        random: v3Params.uuid\n      }),\n      // @ts-ignore - the official V3 keystore spec omits the address key\n      address: this.getAddress().toString('hex'),\n      crypto: {\n        ciphertext: ciphertext.toString('hex'),\n        cipherparams: {\n          iv: v3Params.iv.toString('hex')\n        },\n        cipher: v3Params.cipher,\n        kdf: v3Params.kdf,\n        kdfparams: Object.assign(Object.assign({}, kdfParams), {\n          salt: kdfParams.salt.toString('hex')\n        }),\n        mac: mac.toString('hex')\n      }\n    };\n  }\n  /**\n   * Return the suggested filename for V3 keystores.\n   */\n  getV3Filename(timestamp) {\n    /*\n     * We want a timestamp like 2016-03-15T17-11-33.007598288Z. Date formatting\n     * is a pain in Javascript, everbody knows that. We could use moment.js,\n     * but decide to do it manually in order to save space.\n     *\n     * toJSON() returns a pretty close version, so let's use it. It is not UTC though,\n     * but does it really matter?\n     *\n     * Alternative manual way with padding and Date fields: http://stackoverflow.com/a/7244288/4964819\n     *\n     */\n    const ts = timestamp ? new Date(timestamp) : new Date();\n    return ['UTC--', ts.toJSON().replace(/:/g, '-'), '--', this.getAddress().toString('hex')].join('');\n  }\n  async toV3String(password, opts) {\n    return JSON.stringify(await this.toV3(password, opts));\n  }\n}\nexports.default = Wallet;\n// helpers\nfunction runCipherBuffer(cipher, data) {\n  return Buffer.concat([cipher.update(data), cipher.final()]);\n}\nfunction keyExists(k) {\n  return k !== undefined && k !== null;\n}","map":{"version":3,"names":["crypto","__importStar","require","ethereumjs_util_1","scrypt_js_1","hdkey_1","Object","defineProperty","exports","enumerable","get","__importDefault","default","thirdparty_1","bs58check","randomBytes","uuidv4","v4","validateHexString","paramName","str","length","toLowerCase","startsWith","slice","Error","test","howMany","validateBuffer","buff","Buffer","isBuffer","howManyHex","howManyBytes","mergeToV3ParamsWithDefaults","params","v3Defaults","cipher","kdf","salt","iv","uuid","dklen","c","n","r","p","from","assign","kdfParamsForPBKDF","opts","prf","kdfParamsForScrypt","Wallet","constructor","privateKey","publicKey","undefined","isValidPrivate","isValidPublic","generate","icapDirect","max","BN","privateToAddress","lte","generateVanityAddress","pattern","RegExp","address","toString","fromPublicKey","nonStrict","importPublic","fromExtendedPublicKey","extendedPublicKey","decode","fromPrivateKey","fromExtendedPrivateKey","extendedPrivateKey","tmp","fromV1","input","password","json","JSON","parse","Version","Crypto","KeyHeader","Kdf","kdfparams","KdfParams","derivedKey","scrypt","Salt","N","R","P","DkLen","ciphertext","CipherText","mac","keccak256","concat","MAC","decipher","createDecipheriv","IV","seed","runCipherBuffer","fromV3","version","pbkdf2Sync","cipherparams","fromEthSale","encseed","wallet","getAddress","ethaddr","pubKey","keyExists","privateToPublic","privKey","getPrivateKey","getPrivateKeyString","bufferToHex","getPublicKey","getPublicKeyString","publicToAddress","getAddressString","getChecksumAddressString","toChecksumAddress","toV3","v3Params","kdfParams","createCipheriv","id","random","getV3Filename","timestamp","ts","Date","toJSON","replace","join","toV3String","stringify","data","update","final","k"],"sources":["../src/index.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}